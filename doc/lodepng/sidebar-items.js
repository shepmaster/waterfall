initSidebarItems({"enum":[["Image","Bitmap types. Also contains valid values for `<PixelType>`"]],"fn":[["auto_choose_color","Automatically chooses color type that gives smallest amount of bits in the output image, e.g. grey if there are only greyscale pixels, palette if there are less than 256 colors, ..."],["convert","Converts from any color type to 24-bit or 32-bit (only)"],["decode24","Same as `decode_memory`, but always decodes to 24-bit RGB raw image"],["decode24_file","Same as `decode_file`, but always decodes to 24-bit RGB raw image"],["decode32","Same as `decode_memory`, but always decodes to 32-bit RGBA raw image"],["decode32_file","Same as `decode_file`, but always decodes to 32-bit RGBA raw image"],["decode_file","Load PNG from disk, from file with given name. Same as the other decode functions, but instead takes a file path as input."],["decode_memory","Converts PNG data in memory to raw pixel data."],["deflate","Compress a buffer with deflate. See RFC 1951."],["encode24","Same as `encode_memory`, but always encodes from 24-bit RGB raw image"],["encode24_file","Same as `encode_file`, but always encodes from 24-bit RGB raw image"],["encode32","Same as `encode_memory`, but always encodes from 32-bit RGBA raw image"],["encode32_file","Same as `encode_file`, but always encodes from 32-bit RGBA raw image"],["encode_file","Converts raw pixel data into a PNG file on disk. Same as the other encode functions, but instead takes a file path as output."],["encode_memory","Converts raw pixel data into a PNG image in memory. The colortype and bitdepth of the output PNG image cannot be chosen, they are automatically determined by the colortype, bitdepth and content of the input pixel data."],["zlib_compress","Compresses data with Zlib. Zlib adds a small header and trailer around the deflate data. The data is output in the format of the zlib specification."]],"mod":[["ffi",""]],"struct":[["Bitmap","Low-level representation of an image"],["Chunk",""],["ColorMode",""],["Grey","Opaque greyscale pixel (acces with `px.0`)"],["GreyAlpha","Greyscale pixel with alpha (`px.1` is alpha)"],["Info",""],["RGB","`RGB<T>` with `T` appropriate for bit depth (`u8`, `u16`)"],["RGBA","`RGBA<T>` with `T` appropriate for bit depth (`u8`, `u16`)"],["State",""]]});